name: 'Docker Build or Push'
description: 'Build docker image and push to Artifactory in case of push or release.'
inputs:
  artifactory:
    description: 'Location to push the image to in Artifactory'
    required: false
    default: artifactory.build.ingka.ikea.com/ushub-docker-dev-local
  secrets:
    description: 'Pipeline secrets (Artifactory username/password and GitHub username/token)'
    required: true
outputs:
  environment:
    description: 'Name of which environment(s) to deploy to.'
    value: ${{ steps.set-env.outputs.environment }}
runs:
  using: 'composite'
  steps:
    - name: Load Cache
      id: cache-restore
      run: |
        mkdir -p /tmp/.buildx-cache
        cd "${{ github.action_path }}/cache"
        sudo apt-get -qq install -y zstd
        npm i --silent
        node restore.js
      shell: bash
    - name: Docker build or Push
      run: |
        echo $(date) >> /tmp/.buildx-cache/file.txt
        cat /tmp/.buildx-cache/file.txt
#        docker build -t docker-build "${{ github.action_path }}"
#        docker run -v /var/run/docker.sock:/var/run/docker.sock \
#        -v /tmp/.buildx-cache:/tmp/.buildx-cache \
#        -e ARTIFACTORY -e SECRETS -e GITHUB_EVENT_NAME -e GITHUB_REF \
#        -e GITHUB_REPOSITORY -e GITHUB_ACTOR -e GITHUB_TOKEN \
#        docker-build
      shell: bash
      env:
        ARTIFACTORY: ${{ inputs.artifactory }}
        SECRETS: ${{ inputs.secrets }}
        GITHUB_TOKEN: ${{ github.token }}
    - name: Load Cache
      id: cache-save
      run: |
        node ${{ github.action_path }}/cache/save.js
      shell: bash
