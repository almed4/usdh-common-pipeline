name: 'Docker Build or Push'
description: 'Build docker image and push to artifactory in case of push or release.'
inputs:
  artifactory:
    description: 'Location to push the image to in Artifactory'
    required: false
    default: artifactory.build.ingka.ikea.com/ushub-docker-dev-local
  secrets:
    description: 'Pipeline secrets (Artifactory username/password and GitHub username/token)'
    required: true
  cache:
    description: 'Path to GitHub Actions cache to speed up builds.'
    required: false
outputs:
  environment:
    description: 'Name of which environment(s) to deploy to.'
    value: ${{ steps.set-env.outputs.environment }}
runs:
  using: 'composite'
  steps:
    - name: Configure Cache
      id: cache-config
      run: |
        COMMAND=$( [ -z "${{ inputs.cache }}" ] && echo "" || echo \
        "--cache-from=type=local,src=${{ inputs.cache }} --cache-to=type=local,dest=${{ inputs.cache }},mode=max" )
        MOUNT=$( [ -z "${{ inputs.cache }}" ] && echo "" || echo \
        "--mount type=bind,source=${{ inputs.cache }},target=${{ inputs.cache }}" )

        echo "::set-output name=command::$COMMAND"
        echo "::set-output name=mount::$MOUNT"
      shell: bash
    - name: Docker build or Push
      run: |
        export DOCKER_BUILDKIT=1
        export COMPOSE_DOCKER_CLI_BUILD=1
        docker build -t docker-build "${{ github.action_path }}"
        docker run -v /var/run/docker.sock:/var/run/docker.sock \
        "${{ steps.cache-config.outputs.mount }}" \
        -e ARTIFACTORY -e SECRETS -e GITHUB_EVENT_NAME -e GITHUB_REF \
        -e GITHUB_REPOSITORY -e GITHUB_ACTOR -e GITHUB_TOKEN \
        -e COMMAND \
        docker-build
      shell: bash
      env:
        ARTIFACTORY: ${{ inputs.artifactory }}
        SECRETS: ${{ inputs.secrets }}
        GITHUB_TOKEN: ${{ github.token }}
        COMMAND: ${{ steps.cache-config.outputs.command }}
    - name: Sent Environment
      id: set-env
      run: echo "a"
      shell: bash